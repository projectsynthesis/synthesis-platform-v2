// api/generate-course.js - –§–ò–ö–°–ò–†–ê–ù –ò –†–ê–ë–û–¢–ï–© –ö–û–î
export default async function handler(req, res) {
  console.log('=== API CALL STARTED ===');
  
  // CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // Handle OPTIONS request
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // Only allow POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { topic, style } = req.body;
    console.log('Request body:', { topic, style });

    // Validate input
    if (!topic || !style) {
      return res.status(400).json({ 
        success: false,
        error: 'Topic and style are required' 
      });
    }

    // –í–†–™–©–ê–ú–ï –î–ï–ú–û –í–ï–†–°–ò–Ø –ü–™–†–í–û, –î–û–ö–ê–¢–û –û–ü–†–ê–í–ò–ú OPENAI
    const demoCourse = `
üéØ –ö–£–†–°: ${topic}
üìö –°–¢–ò–õ: ${style}

‚úÖ –£–°–ü–ï–®–ù–û –ì–ï–ù–ï–†–ò–†–ê–ù –ö–£–†–°!

–ó–ê–ì–õ–ê–í–ò–ï: "–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω –∫—É—Ä—Å –ø–æ ${topic}"
–û–ü–ò–°–ê–ù–ò–ï: –¢–æ–∑–∏ –∫—É—Ä—Å –µ —Å—ä–∑–¥–∞–¥–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–Ω–æ –∑–∞ —Ç–µ–± —Å–ø–æ—Ä–µ–¥ –∏–∑–±—Ä–∞–Ω–∏—è —Å—Ç–∏–ª –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ.

–ú–û–î–£–õ 1: –û–°–ù–û–í–ò –ù–ê ${topic.toUpperCase()}
‚úì –£—Ä–æ–∫ 1: –í—ä–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—Å–Ω–æ–≤–Ω–∏ –ø–æ–Ω—è—Ç–∏—è
‚úì –£—Ä–æ–∫ 2: –ö–ª—é—á–æ–≤–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–∏  
‚úì –£—Ä–æ–∫ 3: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
üéØ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ü—Ä–∏–ª–æ–∂–∏ –∑–Ω–∞–Ω–∏—è—Ç–∞ –≤ —Ä–µ–∞–ª–Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—è

–ú–û–î–£–õ 2: –†–ê–ó–®–ò–†–ï–ù–ò –í–™–ó–ú–û–ñ–ù–û–°–¢–ò
‚úì –£—Ä–æ–∫ 1: –ù–∞–ø—Ä–µ–¥–Ω–∞–ª–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
‚úì –£—Ä–æ–∫ 2: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
‚úì –£—Ä–æ–∫ 3: –ò–∑–±—è–≥–≤–∞–Ω–µ –Ω–∞ —á–µ—Å—Ç–æ —Å—Ä–µ—â–∞–Ω–∏ –≥—Ä–µ—à–∫–∏
üéØ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –°—ä–∑–¥–∞–π —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç

üöÄ OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è—Ç–∞ —Å–µ –Ω–∞—Å—Ç—Ä–æ–π–≤–∞... –°–∫–æ—Ä–æ –æ—â–µ –ø–æ-–¥–æ–±—Ä–∏ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏!
`;

    // –°–∏–º—É–ª–∏—Ä–∞–º–µ –∑–∞–±–∞–≤—è–Ω–µ
    await new Promise(resolve => setTimeout(resolve, 1000));

    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ä—Ä–Ω–∞—Ç –¥–µ–º–æ –∫—É—Ä—Å');
    
    return res.status(200).json({
      success: true,
      course: demoCourse,
      note: "üéØ –î–µ–º–æ –≤–µ—Ä—Å–∏—è - OpenAI —Å–µ –Ω–∞—Å—Ç—Ä–æ–π–≤–∞"
    });

  } catch (error) {
    console.error('‚ùå –ì—Ä–µ—à–∫–∞ –≤ API:', error);
    
    return res.status(500).json({
      success: false,
      error: 'Internal server error: ' + error.message
    });
  }
}
