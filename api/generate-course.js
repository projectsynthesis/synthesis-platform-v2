// api/generate-course.js - COMMONJS –í–ï–†–°–ò–Ø
const { GoogleGenerativeAI } = require('@google/generative-ai');

console.log('üîß API —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ —Å–µ –∑–∞—Ä–µ–∂–¥–∞ (CommonJS)...');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ environment variable
const geminiApiKey = process.env.GEMINI_API_KEY;
console.log('üîë Gemini API –∫–ª—é—á:', geminiApiKey ? '‚úÖ –ù–ê–õ–ò–ß–ï–ù' : '‚ùå –õ–ò–ü–°–í–ê');

let genAI = null;
let geminiAvailable = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ Gemini
if (geminiApiKey) {
  try {
    genAI = new GoogleGenerativeAI(geminiApiKey);
    geminiAvailable = true;
    console.log('‚úÖ Gemini AI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.log('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ Gemini:', error.message);
  }
} else {
  console.log('‚ùå GEMINI_API_KEY –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –≤ environment variables');
}

module.exports = async function handler(req, res) {
  console.log('=== –ù–û–í–ê –ó–ê–Ø–í–ö–ê ===', req.method);
  
  // CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { topic, style } = req.body;
    console.log('üìù –ó–∞—è–≤–∫–∞ –∑–∞ –∫—É—Ä—Å:', { topic, style });

    if (!topic || !style) {
      return res.status(400).json({ 
        success: false,
        error: '–¢–µ–º–∞ –∏ —Å—Ç–∏–ª —Å–∞ –∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏' 
      });
    }

    // –î–ï–ú–û –ö–£–†–° (fallback)
    const demoCourse = `üéØ –ö–£–†–°: ${topic}
üìö –°–¢–ò–õ: ${style}

–ó–ê–ì–õ–ê–í–ò–ï: "–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω –∫—É—Ä—Å –ø–æ ${topic}"
–û–ü–ò–°–ê–ù–ò–ï: –¢–æ–∑–∏ –∫—É—Ä—Å –µ —Å—ä–∑–¥–∞–¥–µ–Ω —Å–ø–µ—Ü–∏–∞–ª–Ω–æ –∑–∞ —Ç–µ–±!

–ú–û–î–£–õ 1: –û–°–ù–û–í–ò
‚úì –£—Ä–æ–∫ 1: –í—ä–≤–µ–¥–µ–Ω–∏–µ –≤ ${topic}
‚úì –£—Ä–æ–∫ 2: –ö–ª—é—á–æ–≤–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∏
‚úì –£—Ä–æ–∫ 3: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ

–ú–û–î–£–õ 2: –†–ê–ó–®–ò–†–ï–ù–ò –ó–ù–ê–ù–ò–Ø  
‚úì –£—Ä–æ–∫ 1: –ù–∞–ø—Ä–µ–¥–Ω–∞–ª–∏ —Ç–µ—Ö–Ω–∏–∫–∏
‚úì –£—Ä–æ–∫ 2: –†–µ–∞–ª–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚úì –£—Ä–æ–∫ 3: –§–∏–Ω–∞–ª–µ–Ω –ø—Ä–æ–µ–∫—Ç

üöÄ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–æ —Å—ä—Å —Å–∏—Å—Ç–µ–º–∞—Ç–∞!`;

    // –û–ü–ò–¢ –ó–ê GEMINI AI
    if (geminiAvailable && genAI) {
      console.log('üîÑ –û–ø–∏—Ç–≤–∞–º —Å–µ –¥–∞ –∏–∑–≤–∏–∫–∞–º Gemini AI...');
      
      try {
        const model = genAI.getGenerativeModel({ model: "gemini-pro" });
        
        const prompt = `–ù–∞–ø–∏—à–∏ –∫—Ä–∞—Ç—ä–∫ —É—á–µ–±–µ–Ω –∫—É—Ä—Å –Ω–∞ –ë–™–õ–ì–ê–†–°–ö–ò –µ–∑–∏–∫ –ø–æ —Ç–µ–º–∞: "${topic}". 
        
        –°—Ç–∏–ª –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ: ${style}
        
        –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:
        - –ë—ä–¥–∏ –ø–æ–ª–µ–∑–µ–Ω –∏ –ø—Ä–∞–∫—Ç–∏—á–µ–Ω
        - –í–∫–ª—é—á–∏ –∑–∞–≥–ª–∞–≤–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ 3-4 –º–æ–¥—É–ª–∞
        - –í—Å–µ–∫–∏ –º–æ–¥—É–ª –¥–∞ –∏–º–∞ 2-3 —É—Ä–æ–∫–∞
        - –î–æ–±–∞–≤–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
        - –ü–∏—à–∏ –Ω–∞ —Ä–∞–∑–±–∏—Ä–∞–µ–º –±—ä–ª–≥–∞—Ä—Å–∫–∏ –µ–∑–∏–∫`;
        
        const result = await model.generateContent(prompt);
        const response = await result.response;
        const aiContent = response.text();
        
        console.log('‚úÖ GEMINI AI –£–°–ü–ï–®–ï–ù –û–¢–ì–û–í–û–†!');
        
        return res.status(200).json({
          success: true,
          course: aiContent,
          note: "‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–æ —Å Google Gemini AI!"
        });

      } catch (geminiError) {
        console.log('‚ùå Gemini –≥—Ä–µ—à–∫–∞:', geminiError.message);
        // –ü—Ä–∏ –≥—Ä–µ—à–∫–∞, –ø—Ä–æ–¥—ä–ª–∂–∞–≤–∞–º–µ –∫—ä–º –¥–µ–º–æ –≤–µ—Ä—Å–∏—è
      }
    }

    // –í–†–™–©–ê–ú–ï –î–ï–ú–û –í–ï–†–°–ò–Ø
    console.log('üìù –í—Ä—ä—â–∞–º –¥–µ–º–æ –≤–µ—Ä—Å–∏—è');
    
    return res.status(200).json({
      success: true,
      course: demoCourse,
      note: geminiAvailable ? "‚ö†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–∞ –¥–µ–º–æ –≤–µ—Ä—Å–∏—è (Gemini –≥—Ä–µ—à–∫–∞)" : "üîß Gemini AI –Ω–µ –µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω"
    });

  } catch (error) {
    console.error('‚ùå –ù–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞:', error);
    
    return res.status(200).json({
      success: true,
      course: `–ö—É—Ä—Å –ø–æ ${req.body?.topic || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ —Ç–µ–º–∞'}. –í—Ä–µ–º–µ–Ω–Ω–∞ –≥—Ä–µ—à–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞.`,
      note: "‚ö†Ô∏è –í—Ä–µ–º–µ–Ω–Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞ –≥—Ä–µ—à–∫–∞"
    });
  }
};
